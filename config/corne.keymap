/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define LOWER 1
#define RAISE 2
#define ADJUST 3

#define BT0 BT_SEL 0
#define BT1 BT_SEL 1
#define BT2 BT_SEL 2
#define BT3 BT_SEL 3
#define BT4 BT_SEL 4


/ {

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };
    
    behaviors {
        smart_shft: smart_shift {
            compatible = "zmk,behavior-mod-morph";
            label = "SMART_SHIFT";
            #binding-cells = <0>;
            bindings = <&sk LSHFT>, <&caps_word>;
            mods = <(MOD_LSFT)>;
        };
    };    
    
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB     &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL   &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &smart_shft &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                  &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
                        >;
                };
                
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6   |  7   |  8   |  9   |  0  | DEL  |
// | CTRL |     |     |     |     |     |   | LEFT | DOWN |  UP  | RIGT |     |      |
// | SHFT |     |     |     |     |     |   | HOME | PGDN | PGUP | END  |     |      |
//                    | GUI |     | SPC |   | ENT  |      | ALT  |
                        bindings = <
   &kp TAB   &kp N1  &kp N2  &kp N3   &kp N4  &kp N5     &kp N6   &kp N7    &kp N8    &kp N9    &kp N0 &kp DEL
   &kp LCTRL &trans  &trans  &trans   &trans  &trans     &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &trans &trans
   &kp LSHFT &trans  &trans  &trans   &trans  &trans     &KP END  &KP PG_UP &kp PG_DN &kp END   &trans &trans
                      		  &kp LGUI &trans  &kp SPACE  &kp RET  &trans    &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  F1 |  F2 |  F3 |  F4 | F5  |   | F6  | F7  | F8  | F9  | F10 | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB   &kp F1 &kp F2 &kp F3   &kp F4  &kp F5      &kp F6    &kp F7    &kp F8   &kp F9   &kp F10  &kp BSPC
   &kp LCTRL &trans &trans &trans   &trans  &trans      &kp MINUS &kp EQUAL &kp LBKT &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans &trans &trans   &trans  &trans      &kp UNDER &kp PLUS  &kp LBRC &kp RBRC &kp PIPE &kp TILDE
                    	   &kp LGUI &trans  &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
                
        		adjust_layer {
            			bindings = <
// -----------------------------------------------------------------------------------------
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | MUTE|     |     |     |PLAY |     |
// |      |     |     |     |     |     |   | VLUP|BRIUP|     |     |     |     |
// |      |     |     |     |     |     |   | VLDN|BRIDN|PREV |NEXT |     |     |
//                    | GUI |     | SPC |   | ENT |     | ALT |
   &bt BT_CLR &bt BT0 &bt BT1 &bt BT2  &bt BT3 &bt BT4     &kp K_MUTE   &trans       &trans     &trans      &kp C_PLAY_PAUSE  &trans 
   &trans     &trans  &trans  &trans   &trans  &trans      &kp C_VOL_UP &kp C_BRI_UP &trans     &trans      &trans  &trans
   &trans     &trans  &trans  &trans   &trans  &trans      &kp C_VOL_DN &KP C_BRI_DN &kp C_PREV &kp C_NEXT  &trans  &trans
                    	      &kp LGUI &trans  &kp SPACE   &kp RET      &trans       &kp RALT
                    	>;
        		};
        };
};
